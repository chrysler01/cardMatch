{"version":3,"sources":["utils/Helper.js","reducers/cardReducer.js","components/Card/Card.js","components/CardCollection/CardCollection.js","components/GameScreen/GameScreenProperty/GameScreenProperty.js","components/GameScreen/GameScreen.js","components/MenuLink/MenuLink.js","components/Menu/Menu.js","components/DifficultySelectScreen/DifficultySelectScreen.js","components/Scoreboard/ScoreboardEntry/ScoreboardEntry.js","components/Scoreboard/Scoreboard.js","components/ScoreboardInput/ScoreboardInput.js","components/About/About.js","components/BackButton/BackButton.js","components/App/App.js","store.js","serviceWorker.js","index.js"],"names":["cardIcons","getRandomInt","min","max","Math","ceil","floor","random","getValue","values","length","initialState","cards","matchedCards","selectedCards","time","difficulty","score","name","select","x","y","type","payload","resetState","cardReducer","state","arguments","undefined","action","_objectSpread","Date","now","selected","concat","filter","card","value","matched","Card","_ref","handleClick","className","cardSize","style","width","height","react_default","a","createElement","onClick","index_es","icon","CardCollection","stateUpdated","selectAfterTimeout","_useState","useState","_useState2","Object","slicedToArray","windowWidth","setWindowWidth","_useState3","_useState4","windowHeight","setWindowHeight","_useState5","_useState6","renderedContent","setRenderedContent","_useState7","_useState8","setStyle","_useState9","_useState10","prevSelected","setPrevSelected","useEffect","updateWindowDimensions","window","innerWidth","innerHeight","cardSizeDesktop","cardSizeTablet","cardSizeMobile","react_router","to","map","index","cardClass","includes","prev","slice","components_Card_Card","key","gridForDifficulty","i","toFixed","gridTemplateColumns","gridTemplateRows","GameScreenProperty","build_default","Minutes","formatValue","Seconds","mapDispatchToProps","initializeCards","dispatch","uniqueRandomInts","indexOf","push","j","splice","timeout","setTimeout","connect","setStateUpdated","GameScreen_GameScreenProperty_GameScreenProperty","onStop","setTime","components_CardCollection_CardCollection","MenuLink","href","text","react_router_dom","links","renderedLinks","link","components_MenuLink_MenuLink","difficultyList","ScoreboardEntry","Scoreboard","propScoreboard","scoreboard","sort","b","renderedScoreboard","entry","Scoreboard_ScoreboardEntry_ScoreboardEntry","setName","setScore","redirect","setRedirect","onSubmit","event","preventDefault","fullScore","scoreArray","JSON","parse","localStorage","getItem","lowerElements","element","lowerElementsSorted","setItem","stringify","saveToScoreboardAndReturnScore","htmlFor","onChange","target","About","withRouter","history","location","pathname","Fragment","goBack","faArrowLeft","App","_ref$history","library","add","faAmbulance","faAnchor","faBabyCarriage","faBath","faBed","faBeer","faBell","faBicycle","faBinoculars","faBomb","faBook","faBug","faBus","faCamera","faCandyCane","faCar","faCloud","faDrum","faFeather","faGuitar","faHeadphones","faHeart","faHelicopter","faKey","faLightbulb","faLock","faMoon","faRocket","faTv","faUmbrella","faStar","faWrench","components_BackButton_BackButton","browserHistory","exact","path","render","components_Menu_Menu","_ref2","match","components_GameScreen_GameScreen","params","components_DifficultySelectScreen_DifficultySelectScreen","components_Scoreboard_Scoreboard","components_ScoreboardInput_ScoreboardInput","components_About_About","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","es","components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d936f68e.chunk.js","sourcesContent":["export const cardIcons = ['ambulance', 'anchor', 'baby-carriage', 'bath', 'bed', 'beer', 'bell', 'bicycle',\n                            'binoculars', 'bomb', 'book', 'bug', 'bus', 'camera', 'candy-cane', 'car',\n                            'cloud', 'drum', 'feather', 'guitar', 'headphones', 'heart', 'helicopter', 'key',\n                            'lightbulb', 'lock', 'moon', 'rocket', 'tv', 'umbrella', 'star', 'wrench'];\n\nexport const scoreArrayKey = 'scoreArray';\n\nexport const smallBreakpoint = 360;\nexport const mediumBreakpoint = 768;\nexport const largeBreakpoint = 1024;\n\nexport const getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getValue = (values) => {\n    let rand = getRandomInt(0, values.length - 1);\n    return values[rand];\n};\n\nexport const saveToScoreboardAndReturnScore = (score, name) => {\n    let scoreArray = JSON.parse(localStorage.getItem(scoreArrayKey)) || [];\n\n    if (!scoreArray.includes({score, name})) {\n        const lowerElements = scoreArray.filter(element => element.score < score);\n\n        if (lowerElements.length > 0) {\n            const lowerElementsSorted = lowerElements.sort((a, b) => (a.score - b.score));\n            scoreArray[scoreArray.indexOf(lowerElementsSorted[0])] = {score, name};\n        } else if (scoreArray.length < 10) {\n            scoreArray.push({score, name});\n        }\n\n        localStorage.setItem(scoreArrayKey, JSON.stringify(scoreArray));\n    }\n\n    return score;\n};\n\nexport const getScoreboard = () => {\n    return JSON.parse(localStorage.getItem(scoreArrayKey)) || [];\n};\n\nexport const getTimeSinceStart = (startTime) => {\n    return (Date.now() - startTime);\n};\n","import { getRandomInt, getValue } from '../utils/Helper';\n\nexport const initialState = {\n    cards: [],\n    matchedCards: [],\n    selectedCards: [],\n    time: 0,\n    difficulty: 1,\n    score: 0,\n    name: ''\n};\n\nconst cardReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'INIT_CARDS':\n            return {\n                ...state,\n                difficulty: action.payload.difficulty,\n                cards: action.payload.cards,\n                time: Date.now()\n            };\n        case 'CARD_SELECTED': {\n            const selected = state.selectedCards.concat(state.cards.filter(card => card.x === action.payload.x && card.y === action.payload.y));\n\n            if (selected.length === 2) {\n                if (selected[0].value === selected[1].value) {\n\n                    const matched = state.matchedCards.concat(selected);\n\n                    if (matched.length === state.cards.length) {\n                        return {\n                            ...state,\n                            score: state.difficulty >= 3 ? state.score += 60 : state.score += 40,\n                            cards: [],\n                            selectedCards: [],\n                            matchedCards: []\n                        };\n                    }\n\n                    return {\n                        ...state,\n                        score: state.score += 40,\n                        matchedCards: matched,\n                        selectedCards: []\n                    };\n                } else if (action.payload.x === -1 && action.payload.y === -1) {\n                    return {\n                        ...state,\n                        selectedCards: []\n                    };\n                } else {\n                    return {\n                        ...state,\n                        selectedCards: selected\n                    };\n                }\n            } else if (selected.length > 2) {\n                return {\n                    ...state,\n                    selectedCards: []\n                };\n            } else {\n                return {\n                    ...state,\n                    selectedCards: selected\n                };\n            }\n        }\n        case 'SET_NAME':\n            return {\n                ...state,\n                name: action.payload\n            };\n        case 'SET_SCORE':\n            return {\n                ...state,\n                score: action.payload\n            };\n        case 'RESET_STATE':\n            return initialState;\n        case 'SET_TIME':\n            return {\n                ...state,\n                time: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport const initializeCards = (difficulty) => {\n    return dispatch => {\n        let cards = [];\n        let values = [];\n        let uniqueRandomInts = [];\n        let max;\n\n        if (difficulty <= 4 && difficulty >= 1) {\n            max = difficulty * 2;\n        } else {\n            max = 8;\n            difficulty = 4;\n        }\n\n        for (let i = 0; i < max * difficulty; i++) {\n            let random;\n\n            do  {\n                //Up to 31 - max index of cardIcons array used for storing icon names\n                random = getRandomInt(0, 31);\n            } while (uniqueRandomInts.indexOf(random) !== -1);\n\n            values.push(random);\n            uniqueRandomInts.push(random);\n        }\n\n        values = values.concat(values);\n        for (let i = 0; i < max; i++) {\n            for (let j = 0; j < max; j++) {\n                cards.push({x: i, y: j, value: getValue(values)});\n\n                values.splice(values.indexOf(cards[cards.length - 1].value), 1);\n            }\n        }\n\n        dispatch({\n            type: 'INIT_CARDS',\n            payload: {\n                difficulty,\n                cards\n            }\n        });\n    };\n};\n\nexport const select = (x, y) => {\n    return {\n        type: 'CARD_SELECTED',\n        payload: {\n            x, y\n        }\n    };\n};\n\nexport const selectAfterTimeout = (x, y, timeout) => {\n    return dispatch => {\n\n        setTimeout(() => {\n            dispatch(select(x, y));\n        }, timeout);\n    };\n};\n\nexport const setScore = (score) => {\n    return {\n        type: 'SET_SCORE',\n        payload: score\n    };\n};\n\nexport const setName = (name) => {\n    return {\n        type: 'SET_NAME',\n        payload: name\n    };\n};\n\nexport const resetState = () => {\n    return {\n        type: 'RESET_STATE'\n    };\n};\n\nexport const setTime = (time) => {\n    return {\n        type: 'SET_TIME',\n        payload: time\n    };\n};\n\nexport default cardReducer;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Card.scss';\n\nconst Card = ({ value, handleClick, className, cardSize }) => {\n    const style = {width: `${cardSize}px`, height: `${cardSize}px`};\n\n    return (\n        <div className={className} onClick={handleClick}>\n            <div className=\"svg-wrapper-backside\">\n                <div className=\"svg-wrapper\">\n                    <FontAwesomeIcon icon={value} style={style}/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { smallBreakpoint, mediumBreakpoint } from '../../utils/Helper';\nimport Card from '../Card/Card';\nimport './CardCollection.scss';\n\nexport const CardCollection = ({ cards, matchedCards, selectedCards, difficulty, select, cardIcons, stateUpdated, selectAfterTimeout }) => {\n\n    const [windowWidth, setWindowWidth] = useState(0);\n    const [windowHeight, setWindowHeight] = useState(0);\n    const [renderedContent, setRenderedContent] = useState([]);\n    const [style, setStyle] = useState({});\n    const [prevSelected, setPrevSelected] = useState([]);\n\n    useEffect(() => {\n        const updateWindowDimensions = () => {\n            setWindowWidth(window.innerWidth);\n            setWindowHeight(window.innerHeight);\n        };\n\n        updateWindowDimensions();\n\n        return updateWindowDimensions;\n    });\n\n    useEffect(() => {\n        const cardSizeDesktop = [100, 80, 60, 40];\n        const cardSizeTablet = [100, 70, 50, 35];\n        const cardSizeMobile = [100, 55, 35, 25];\n\n        setRenderedContent(\n            cards.length === 0 && stateUpdated ? <Redirect to=\"/scoreboard/input\" /> : cards.map((card, index) => {\n\n                let cardClass = (matchedCards.includes(card) ? 'card matched' :\n                    (selectedCards.includes(card) ? 'card selected' :\n                    (prevSelected.includes(card) ? 'card to-hide' : 'card')));\n\n                const handleClick = matchedCards.includes(card) || selectedCards.includes(card) ? () => {} :\n                    () => {\n                        select(card.x, card.y);\n                        let prev = prevSelected.concat(card);\n\n                        if (prev.length > 2) {\n                            prev = prev.slice(2);\n                        }\n\n                        setPrevSelected(prev);\n\n                        if (prev.length === 2) {\n                            if (prev[0].value !== prev[1].value) {\n                                cardClass = 'card to-hide';\n                                selectAfterTimeout(-1, -1, 500);\n                            }\n                        }\n                    };\n\n                let cardSize = windowWidth <= smallBreakpoint || windowHeight <= smallBreakpoint ? cardSizeMobile[difficulty - 1] :\n                                    (windowWidth <= mediumBreakpoint || windowHeight <= mediumBreakpoint ? cardSizeTablet[difficulty - 1] : cardSizeDesktop[difficulty - 1]);\n\n                if (windowWidth > windowHeight && (windowHeight <= mediumBreakpoint)) {\n                    cardSize -= (windowWidth <= smallBreakpoint || windowHeight <= smallBreakpoint ? 10 : 15 * ((4 - difficulty) === 0 ? 1 : (4 - difficulty)));\n                }\n\n                return (\n                    <Card key={card.value * index + difficulty + index} value={cardIcons[card.value]}\n                        handleClick={handleClick} className={cardClass} cardSize={cardSize} />\n                );\n            })\n        );\n\n        let gridForDifficulty = '';\n\n        for (let i = 0; i < difficulty * 2; i++) {\n            gridForDifficulty += `${(100 / ( difficulty * 2)).toFixed(2)}% `;\n        }\n\n        setStyle({\n            gridTemplateColumns: gridForDifficulty,\n            gridTemplateRows: gridForDifficulty\n        });\n\n        return () => {\n            if (prevSelected.length >= 2) {\n                setPrevSelected([]);\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [cards, selectedCards, matchedCards, windowWidth]);\n\n\n\n    return (\n        <div className=\"card-collection\" style={style}>\n            {renderedContent}\n        </div>\n    );\n};\n\nexport default CardCollection;\n","import React from 'react';\nimport Timer from 'react-compound-timer';\nimport './GameScreenProperty.scss';\n\nconst GameScreenProperty = ({name, value}) => {\n    return (\n        <div className=\"game-screen-property\">\n            <span className=\"name\">{`${name}: `}</span>\n            <span className=\"value\">\n            {\n                name !== 'Time' ?\n                value.toFixed(2) :\n                <Timer>\n                    <Timer.Minutes formatValue={value => `${value < 10 ? `0${value}` : value}:`} />\n                    <Timer.Seconds formatValue={value => `${value < 10 ? `0${value}` : value}`} />\n                </Timer>\n            }\n            </span>\n        </div>\n    );\n};\n\nexport default GameScreenProperty;\n\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { select, initializeCards, setTime, selectAfterTimeout } from '../../reducers/cardReducer';\nimport CardCollection from '../CardCollection/CardCollection';\nimport GameScreenProperty from './GameScreenProperty/GameScreenProperty';\nimport './GameScreen.scss';\n\nexport const GameScreen = ({cards, matchedCards, selectedCards, difficulty, select, initializeCards, cardIcons, score, selectAfterTimeout}) => {\n\n    const [stateUpdated, setStateUpdated] = useState(false);\n\n    useEffect(() => {\n        initializeCards(difficulty);\n        setStateUpdated(true);\n    }, [difficulty, initializeCards]);\n\n    return (\n        <div className=\"game-screen-wrapper\">\n            <div className=\"top-section\">\n                <GameScreenProperty name={'Time'} value={null} onStop={(time) => setTime(time)} />\n                <GameScreenProperty name={'Score'} value={score} />\n            </div>\n            <div className=\"bottom-section\">\n                <CardCollection stateUpdated={stateUpdated} cards={cards} matchedCards={matchedCards} selectedCards={selectedCards}\n                    select={select} difficulty={difficulty} cardIcons={cardIcons} selectAfterTimeout={selectAfterTimeout} />\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    state = state.cardReducer;\n    return {\n        cards: state.cards,\n        matchedCards: state.matchedCards,\n        selectedCards: state.selectedCards,\n        time: state.time,\n        score: state.score\n    };\n};\n\nconst mapDispatchToProps = {\n    select,\n    initializeCards,\n    selectAfterTimeout\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameScreen);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './MenuLink.scss';\n\nconst MenuLink = ({ href, text, className }) => {\n\n    return (\n        <div className={`menu-link ${className}`}>\n            <Link to={href}>\n                {text}\n            </Link>\n        </div>\n    );\n};\n\nexport default MenuLink;\n\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { resetState } from '../../reducers/cardReducer';\nimport MenuLink from '../MenuLink/MenuLink';\nimport './Menu.scss';\n\nexport const Menu = ({ links, resetState }) => {\n\n    useEffect(() => {\n        resetState();\n    }, [resetState]);\n\n    const renderedLinks = links.map(link =>\n        (<MenuLink key={link.href.length * link.name.length} href={link.href} className=\"primary\" text={link.name} />));\n\n    return (\n        <div className=\"menu-wrapper\">\n            {renderedLinks}\n        </div>\n    );\n};\n\nexport default connect(null, {resetState})(Menu);\n\n","import React, { useEffect } from 'react';\nimport { resetState } from '../../reducers/cardReducer';\nimport { connect } from 'react-redux';\nimport MenuLink from '../MenuLink/MenuLink';\nimport './DifficultySelectScreen.scss';\n\nexport const DifficultySelectScreen = ({ difficultyList, resetState }) => {\n\n    useEffect(() => {\n        resetState();\n    }, [resetState]);\n\n    const renderedLinks = difficultyList.map((difficulty, index) => (\n        <MenuLink key={difficulty.value * difficulty.name.length + index} href={`/game/${difficulty.value}`}\n            text={difficulty.name} className=\"primary\" />\n    ));\n\n\n    return (\n        <div className=\"difficulty-select-screen-wrapper\">\n            {renderedLinks}\n        </div>\n    );\n};\n\nexport default connect(null, {resetState})(DifficultySelectScreen);\n","import React from 'react';\nimport './ScoreboardEntry.scss';\n\nconst ScoreboardEntry = ({ name, score }) => (\n    <div className=\"scoreboard-entry\">\n        <span className=\"name\">\n            {`${name}: `}\n        </span>\n        <span className=\"score\">\n            {score.toFixed(2)}\n        </span>\n    </div>\n);\n\nexport default ScoreboardEntry;\n\n","import React from 'react';\nimport ScoreboardEntry from './ScoreboardEntry/ScoreboardEntry';\nimport './Scoreboard.scss';\n\nconst Scoreboard = ({propScoreboard}) => {\n\n    let scoreboard = propScoreboard;\n    scoreboard = scoreboard.sort((a, b) => {\n        if (a.score < b.score) {\n            return 1;\n        } else if (a.score > b.score) {\n            return -1;\n        } else {\n            return 0;\n        }\n    });\n\n    const renderedScoreboard = propScoreboard === [] || propScoreboard === undefined || propScoreboard.length === 0 ?\n        <h1>Nothing to show. Play the game to get your score saved!</h1> :\n        scoreboard.map(entry => (\n            <ScoreboardEntry key={entry.score * entry.name.length} score={entry.score} name={entry.name} />\n        ));\n\n    return (\n        <div className=\"scoreboard-wrapper\">\n            <header className=\"scoreboard-header\">\n                <h4>10 highest scores of all time:</h4>\n            </header>\n            <div className=\"scoreboard-content\">\n                {renderedScoreboard}\n            </div>\n        </div>\n    );\n};\n\nexport default Scoreboard;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setScore, setName } from '../../reducers/cardReducer';\nimport { saveToScoreboardAndReturnScore } from '../../utils/Helper';\nimport './ScoreboardInput.scss';\n\nconst ScoreboardInput = ({ score, name, time, setScore, setName }) => {\n\n    const [redirect, setRedirect] = useState(false);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const fullScore = score - ((Date.now() - time) / 1000) ;\n\n        setScore(fullScore);\n        saveToScoreboardAndReturnScore(fullScore, name);\n        setRedirect(true);\n    };\n\n    const handleChange = (event) => {\n        setName(event.target.value);\n    };\n\n    return (\n        <div className=\"scoreboard-input-wrapper\">\n            {\n                redirect || score === 0 ? <Redirect to=\"/\" /> :\n                    <form onSubmit={handleSubmit}>\n                        <label htmlFor=\"name\">Your name</label>\n                        <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n                        <button type=\"submit\">Save your score</button>\n                    </form>\n            }\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    state = state.cardReducer;\n    return {\n        score: state.score,\n        name: state.name,\n        time: state.time\n    };\n};\n\nconst mapDispatchToProps = {\n    setName,\n    setScore\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScoreboardInput);\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport './About.scss';\n\nconst About = () => {\n\n    const svgSize = {width: '2rem', height: '2rem'};\n\n    return(\n        <div className=\"about-wrapper\">\n            <header className=\"about-header\">\n                <h1>Card matching game</h1>\n            </header>\n            <section className=\"about-content\">\n                <p>Made by Evgeni Kolodinski</p>\n            </section>\n        </div>\n    );\n};\n\nexport default About;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport './BackButton.scss';\n\nexport const BackButton = ({ history, location }) => {\n\n    return (\n        <div className=\"back-button\">\n            {\n                location.pathname === '/' ?\n                <></> :\n                <button type=\"button\" onClick={() => history.goBack()}>\n                    <FontAwesomeIcon icon={faArrowLeft} style={{width: '2rem', height: '2rem'}} />\n                </button>\n            }\n\n        </div>\n    );\n};\n\n\nexport default withRouter(BackButton);\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport GameScreen from '../GameScreen/GameScreen';\nimport Menu from '../Menu/Menu';\nimport DifficultySelectScreen from '../DifficultySelectScreen/DifficultySelectScreen';\nimport Scoreboard from '../Scoreboard/Scoreboard';\nimport ScoreboardInput from '../ScoreboardInput/ScoreboardInput';\nimport About from '../About/About';\nimport BackButton from '../BackButton/BackButton';\nimport { getScoreboard } from '../../utils/Helper';\nimport { cardIcons } from '../../utils/Helper';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faAmbulance, faAnchor, faBabyCarriage, faBath, faBed, faBeer, faBell, faBicycle,\n        faBinoculars, faBomb, faBook, faBug, faBus, faCamera, faCandyCane, faCar,\n        faCloud, faDrum, faFeather, faGuitar, faHeadphones, faHeart, faHelicopter, faKey,\n        faLightbulb, faLock, faMoon, faRocket, faTv, faUmbrella, faStar, faWrench} from '@fortawesome/free-solid-svg-icons';\nimport './App.scss';\n\nconst App = ({ history = null}) => {\n\n    library.add(faAmbulance, faAnchor, faBabyCarriage, faBath, faBed, faBeer, faBell, faBicycle,\n                faBinoculars, faBomb, faBook, faBug, faBus, faCamera, faCandyCane, faCar,\n                faCloud, faDrum, faFeather, faGuitar, faHeadphones, faHeart, faHelicopter, faKey,\n                faLightbulb, faLock, faMoon, faRocket, faTv, faUmbrella, faStar, faWrench);\n\n    const links = [{href: '/game/difficulty/choose', name: 'Start game'}, {href: '/scoreboard', name: 'Scoreboard'}, {href: '/about', name: 'About'}];\n    const difficultyList = [{value: 1, name: 'Easy'}, {value: 2, name: 'Normal'}, {value: 3, name: 'Hard'}, {value: 4, name: 'Very hard'}];\n\n    return (\n        <div className=\"app-wrapper\">\n            <Router>\n                <BackButton browserHistory={history} />\n                <Route exact path=\"/\" render={() => <Menu links={links} />} />\n                <Route exact path=\"/game/:difficulty\" render={({ match }) => <GameScreen difficulty={match.params.difficulty} cardIcons={cardIcons} />} />\n                <Route exact path=\"/game/difficulty/choose\" render={() => <DifficultySelectScreen difficultyList={difficultyList} />} />\n                <Route exact path=\"/scoreboard\" render={() => <Scoreboard propScoreboard={getScoreboard()} />} />\n                <Route path=\"/scoreboard/input\" render={() => <ScoreboardInput />} />\n                <Route path=\"/about\" render={() => <About />} />\n            </Router>\n        </div>\n    );\n};\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport cardReducer from './reducers/cardReducer';\n\nconst reducer = combineReducers({\n    cardReducer\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","/* eslint-disable no-undef */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport App from './components/App/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\nserviceWorker.register();\n\n"],"sourceRoot":""}